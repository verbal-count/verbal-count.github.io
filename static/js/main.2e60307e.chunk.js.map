{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["cookies","Cookies","App","maxT","get","console","log","undefined","minT","defaultMax","defaultMin","getRandomInt","min","max","rand","Math","random","round","useState","first","setFirst","second","setSecond","setMax","setMin","res","setRes","resText","setResText","op","d","operation","setOperation","generate","answer","React","createRef","submitAnswer","s","toString","ans","eval","current","value","className","style","color","ref","marginLeft","width","fontSize","type","onClick","cursor","onChange","e","set","target","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.2e60307e.chunk.js","sourcesContent":["import './bootstrap.min.css';\nimport './App.css';\n\nimport { useState } from 'react';\nimport React from 'react';\n\nimport Cookies from 'universal-cookie';\n\nconst cookies = new Cookies();\n\nfunction App() {\n  let maxT = cookies.get('max')\n  console.log(maxT)\n  if (maxT === undefined){\n    maxT = 100\n  }\n\n  let minT = cookies.get('min')\n  if (minT === undefined){\n    minT = 10\n  }\n\n  const defaultMax = maxT\n  const defaultMin = minT\n\n  const getRandomInt = (min, max)=> {\n    let rand = min - 0.5 + Math.random() * (max - min + 1);\n    return Math.round(rand);\n  }\n\n  let [first, setFirst] = useState(getRandomInt(defaultMin, defaultMax))\n  let [second, setSecond] = useState(getRandomInt(defaultMin, defaultMax))\n\n  let [max, setMax] = useState(defaultMax)\n  let [min, setMin] = useState(defaultMin)\n\n  let [res, setRes] = useState('')\n  let [resText, setResText] = useState('')\n\n  let op = ''\n  let d = getRandomInt(1, 3)\n  if (d === 1){\n    op = '+'\n  } else if (d === 2){\n    op = '-'\n  } else if (d === 3){\n    op = '*'\n  }\n\n  let [operation, setOperation] = useState(op)\n\n  const generate = ()=>{\n    setFirst(getRandomInt(min, max))\n    setSecond(getRandomInt(min, max))\n    let d = getRandomInt(1, 3)\n    if (d === 1){\n      setOperation('+')\n    } else if (d === 2){\n      setOperation('-')\n    } else if (d === 3){\n      setOperation('*')\n    }\n  }\n\n  let answer = React.createRef()\n\n  const submitAnswer = ()=>{\n    const s = first.toString()+operation+second.toString()\n    const ans = eval(s)\n    if (ans == answer.current.value){\n      setRes('blue')\n      setResText('Correct. '+first.toString()+' '+operation+' '+second.toString()+' = '+ans)\n    } else {\n      setRes('red')\n      setResText('Incorrect. '+first.toString()+' '+operation+' '+second.toString()+' = '+ans)\n    }\n    answer.current.value = ''\n    generate()\n  }\n\n  return (\n    <div className=\"App\">\n      <center>\n        <h1>Verbal count</h1>\n        <br/>\n        <br/>\n        <div>\n          <h2>\n            {res !== '' ? <>\n              <p style={{color: res}}>{resText}</p>\n              <br/>\n            </> : <></>}\n            <div>{first}&nbsp;{operation}&nbsp;{second}&nbsp;=</div>&nbsp;\n            <br/>\n            <input ref={answer} style={{marginLeft: '10px', width: '70%', fontSize: '20px'}} className=\"form-control\" type=\"number\" />\n          </h2>\n          <br/>\n          <br/>\n          <br/>\n          <br/>\n          <p className=\"btn btn-info\" onClick={submitAnswer} style={{cursor: 'pointer'}}>Submit</p>\n          <br/>\n          <br/>\n          <p onClick={generate} className=\"btn btn-warning\" style={{cursor: 'pointer'}}>Generate</p>\n          <br/>\n          <br/>\n          <br/>\n          <div>\n              <h2>Max:</h2>\n              <input value={defaultMax} onChange={(e)=>{\n                cookies.set('max', e.target.value)\n                setMax(e.target.value)\n              }} style={{width: '60%'}} className=\"form-control\"/>\n              <br/>\n              <br/>\n              <h2>Min:</h2>\n              <input value={defaultMin} onChange={(e)=>{\n                cookies.set('min', e.target.value)\n                setMin(e.target.value)\n              }} style={{width: '60%'}} className=\"form-control\"/>\n              <br/>\n              <br/>\n              <br/>\n            </div>\n        </div>\n      </center>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}